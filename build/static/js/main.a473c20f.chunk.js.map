{"version":3,"sources":["components/Messageform.jsx","components/Mymessage.jsx","components/Theirmessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["Messageform","props","useState","value","stateValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","Mymessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","Theirmessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","ismymessage","people","map","person","index","last_read","renderMessege","keys","Object","key","lastmessagekey","width","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","userSecret","projectID","renderChatFeed","ChatAppProps","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a473c20f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {sendMessage,isTyping} from 'react-chat-engine';\r\nimport { SendOutlined,PictureOutlined } from \"@ant-design/icons\";\r\nconst Messageform=(props)=>{\r\n    const [value,stateValue]=useState('');\r\n    const {chatId,creds}=props;\r\n\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        const text=value.trim();\r\n        if(text.length>0)sendMessage(creds,chatId,{text});\r\n        stateValue('');\r\n\r\n    }\r\n    const handleChange=(event)=>{\r\n        stateValue(event.target.value);\r\n        isTyping(props,chatId);\r\n\r\n    }\r\n    const handleUpload=(event)=>{\r\n        sendMessage(creds,chatId,{files:event.target.files,text:''});\r\n    }\r\n    return(\r\n        <form className='message-form' onSubmit={handleSubmit}>\r\n            <input\r\n            className=\"message-input\"\r\n            placeholder=\"send a message ...\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            />\r\n        <label htmlFor='upload-button'>\r\n            <span className='image-button'>\r\n                <PictureOutlined className='picture-icon'/>\r\n                \r\n            </span>\r\n        </label>\r\n        <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id='upload-button'\r\n        style={{display:'none'}}\r\n        onChange={handleUpload}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n            <SendOutlined className=\"send-icon\"/>\r\n        </button>\r\n        </form>\r\n\r\n\r\n    );\r\n}\r\nexport default Messageform;","const Mymessage=({message})=>{\r\n    if(message?.attachments?.length >0){\r\n        return (\r\n            <img\r\n            src={message.attachments[0].file}\r\n            alt='message-attachment'\r\n            className='message-image'\r\n            style={{float:'right'}}\r\n            />)\r\n    }\r\n    return(\r\n        <div className='message' style={{float:'right',marginRight:'18px',color:'black',backgroundColor:'white'}}>\r\n\r\n            {message.text}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Mymessage;","const Theirmessage=({lastMessage,message})=>{\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return(\r\n        <div className='message-row'>\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                className='message-avatar'\r\n                style={{backgroundImage :`url(${message?.sender?.avatar})`}}\r\n                />\r\n                )}\r\n    \r\n            {message?.attachments?.length >0 \r\n                ? (\r\n            <img\r\n            src={message.attachments[0].file}\r\n            alt='message-attachment'\r\n            className='message-image'\r\n            style={{marginLeft: isFirstMessageByUser ? '4px' :'48px'}}\r\n            />\r\n            ):(\r\n                <div className='message' style={{float:'left',color:'white',backgroundColor:'#228B22',marginLeft: isFirstMessageByUser ? '4px' :'48px'}}>\r\n                    {message.text}\r\n                </div>\r\n\r\n            )\r\n    }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Theirmessage;","import Messageform from './Messageform';\r\nimport Mymessage from './Mymessage';\r\nimport Theirmessage from './Theirmessage';\r\nconst ChatFeed=(props)=>{\r\n    const {chats,activeChat ,userName, messages}=props;\r\n    const chat = chats && chats[activeChat];\r\n    const renderReadReceipts=(message,ismymessage)=>{\r\n        return chat.people.map((person,index)=>person.last_read===message.id && (\r\n            <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float:ismymessage ? 'right' : 'left',\r\n                backgroundImage :`url(${person?.person?.avatar})`\r\n            }}\r\n            />\r\n        ))\r\n    }\r\n    const renderMessege =()=>{\r\n        const keys=Object.keys(messages);\r\n        return keys.map((key,index)=>{\r\n            const message = messages[key];\r\n            const lastmessagekey=index === 0 ? null : keys[index-1];\r\n            const ismymessage=userName ===message.sender.userName;\r\n            return (\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                <div className=\"message-block\">\r\n                    {\r\n                        ismymessage \r\n                        ?<Mymessage message={message}/>\r\n                        :<Theirmessage message={message} lastMessage={message[lastmessagekey]}/>\r\n                    }\r\n                </div>\r\n                <div className='read-receipts' style={{marginRight:ismymessage ? '18px' : '0px', marginLeft: ismymessage ? '0px' :'68px'}}>\r\n\r\n                   {renderReadReceipts(message,ismymessage)} \r\n                </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    renderMessege();\r\n    if(!chat) return 'loading.... messages';\r\n    return(\r\n        <div className='chat-feed'>\r\n            <div className='chat-title-container'>\r\n                <div className='chat-title'>{chat.title}</div>\r\n                <div className='chat-sibtitle'>\r\n                {chat.people.map((person)=>` ${person.person.userName}`)}\r\n                </div>\r\n\r\n            </div>\r\n            {renderMessege()}\r\n            <div style={{height:'100px'}}/>\r\n            <div className='message-form-container'>\r\n                <Messageform {...props} chatId={activeChat}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ChatFeed;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst LoginForm=()=>{\r\n    const [username,setUsername]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [error,setError]=useState('');\r\n    const handleSubmit= async (e)=>{\r\n        e.preventDefault();\r\n        const authObject={'Project-ID':\"151b60bc-ce6d-423b-8736-8f8df383310f\",'User-Name':username,\"User-Secret\":password};\r\n        try{\r\n            await axios.get('https://api.chatengine.io/chats',{headers :authObject});\r\n            localStorage.setItem('username',username);\r\n            localStorage.setItem('password',password);\r\n            window.location.reload();\r\n        }catch(error){\r\n            setError(\"wrong credentials...\");\r\n\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">ChatApp</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>start chatting....</span>\r\n                        </button>\r\n                        <h2 className=\"error\">{error}</h2>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import {ChatEngine} from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed';\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm';\r\nconst App=()=>{\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n    return(\r\n        <ChatEngine\r\n        height='100vh'\r\n        userName={localStorage.getItem('username')}\r\n        userSecret={localStorage.getItem('password')}\r\n        projectID='151b60bc-ce6d-423b-8736-8f8df383310f'\r\n        renderChatFeed={(ChatAppProps)=><ChatFeed {...ChatAppProps}/>}\r\n\r\n        />\r\n\r\n    );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}